ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_ui2d
  20              		.global	__aeabi_dsub
  21              		.global	__aeabi_ddiv
  22              		.global	__aeabi_dcmpgt
  23              		.global	__aeabi_dcmplt
  24              		.global	__aeabi_dmul
  25              		.global	__aeabi_dadd
  26              		.global	__aeabi_d2uiz
  27              		.section	.text.steer_inter,"ax",%progbits
  28              		.align	2
  29              		.global	steer_inter
  30              		.thumb
  31              		.thumb_func
  32              		.type	steer_inter, %function
  33              	steer_inter:
  34              	.LFB64:
  35              		.file 1 "main.c"
   1:main.c        **** // ALL DEBUG OUTPUTS ARE IN P5[1-5]
   2:main.c        **** 
   3:main.c        **** #include "project.h"
   4:main.c        **** #include <stdio.h>
   5:main.c        **** 
   6:main.c        **** // Speed control constants and variables
   7:main.c        **** #define TARGET_SPEED 3.65
   8:main.c        **** #define WHEEL_CIRCUMFERENCE 0.5
   9:main.c        **** #define PULSES_PER_TURN 5
  10:main.c        **** 
  11:main.c        **** #define Kp 10
  12:main.c        **** #define Ki 1.0
  13:main.c        **** #define base 120
  14:main.c        **** 
  15:main.c        **** double speed = 0.0;
  16:main.c        **** double error = 0.0;
  17:main.c        **** uint16 old = 65535;
  18:main.c        **** uint16 new;
  19:main.c        **** uint16 elapsed;
  20:main.c        **** double PWM_base = 30;
  21:main.c        **** double pwm;
  22:main.c        **** 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 2


  23:main.c        **** double err;
  24:main.c        **** double acc_err = 0;
  25:main.c        **** 
  26:main.c        **** char strbuf[32];
  27:main.c        **** 
  28:main.c        **** // Line-following constants and variables       
  29:main.c        **** #define MIDDLE_LINE 675
  30:main.c        **** double Kp_steering = 1;
  31:main.c        **** double Kd_steering = -0.05;
  32:main.c        **** 
  33:main.c        **** double error_steering = 0;
  34:main.c        **** double prev_steering = 0; // for kd calculation
  35:main.c        **** double steeringOutput = 0;
  36:main.c        **** int steeringPWM = 0;
  37:main.c        **** double sampledTime;
  38:main.c        **** 
  39:main.c        **** #define PWM_MIN 1020
  40:main.c        **** #define PWM_CENTER 1500
  41:main.c        **** #define PWM_MAX 1980
  42:main.c        **** 
  43:main.c        **** char str_buf [32];
  44:main.c        **** 
  45:main.c        **** // C Sync ISR - increments line count and signals the middle line
  46:main.c        **** CY_ISR(steer_inter) {
  36              		.loc 1 46 0
  37              		.cfi_startproc
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  41              		.cfi_def_cfa_offset 32
  42              		.cfi_offset 4, -32
  43              		.cfi_offset 5, -28
  44              		.cfi_offset 6, -24
  45              		.cfi_offset 7, -20
  46              		.cfi_offset 8, -16
  47              		.cfi_offset 9, -12
  48              		.cfi_offset 10, -8
  49              		.cfi_offset 14, -4
  47:main.c        ****     
  48:main.c        ****     // Read the capture value from the sample timer
  49:main.c        ****     sampledTime = 65535 - (double) VID_TIMER_ReadCapture();
  50              		.loc 1 49 0
  51 0004 FFF7FEFF 		bl	VID_TIMER_ReadCapture
  52              	.LVL0:
  53 0008 FFF7FEFF 		bl	__aeabi_ui2d
  54              	.LVL1:
  55 000c 0246     		mov	r2, r0
  56 000e 0B46     		mov	r3, r1
  57 0010 3DA1     		adr	r1, .L10
  58 0012 D1E90001 		ldrd	r0, [r1]
  59 0016 FFF7FEFF 		bl	__aeabi_dsub
  60              	.LVL2:
  61 001a 434B     		ldr	r3, .L10+32
  62 001c C3E90001 		strd	r0, [r3]
  50:main.c        ****     
  51:main.c        ****     // Calculate steering error
  52:main.c        ****     error_steering = sampledTime - MIDDLE_LINE;
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 3


  63              		.loc 1 52 0
  64 0020 0022     		movs	r2, #0
  65 0022 424B     		ldr	r3, .L10+36
  66 0024 FFF7FEFF 		bl	__aeabi_dsub
  67              	.LVL3:
  68 0028 0446     		mov	r4, r0
  69 002a 0D46     		mov	r5, r1
  70 002c 404B     		ldr	r3, .L10+40
  71 002e C3E90045 		strd	r4, [r3]
  53:main.c        ****     double delta_error = (error_steering - prev_steering)/1400;
  72              		.loc 1 53 0
  73 0032 D3E90223 		ldrd	r2, [r3, #8]
  74 0036 FFF7FEFF 		bl	__aeabi_dsub
  75              	.LVL4:
  76 003a 0022     		movs	r2, #0
  77 003c 3D4B     		ldr	r3, .L10+44
  78 003e FFF7FEFF 		bl	__aeabi_ddiv
  79              	.LVL5:
  80 0042 8046     		mov	r8, r0
  81 0044 8946     		mov	r9, r1
  82              	.LVL6:
  54:main.c        ****     
  55:main.c        ****     // If turning, turn off kd
  56:main.c        ****     if (error_steering > 150 || error_steering < -150) {
  83              		.loc 1 56 0
  84 0046 32A3     		adr	r3, .L10+8
  85 0048 D3E90023 		ldrd	r2, [r3]
  86 004c 2046     		mov	r0, r4
  87 004e 2946     		mov	r1, r5
  88 0050 FFF7FEFF 		bl	__aeabi_dcmpgt
  89              	.LVL7:
  90 0054 30B9     		cbnz	r0, .L2
  91              		.loc 1 56 0 is_stmt 0 discriminator 1
  92 0056 0022     		movs	r2, #0
  93 0058 374B     		ldr	r3, .L10+48
  94 005a 2046     		mov	r0, r4
  95 005c 2946     		mov	r1, r5
  96 005e FFF7FEFF 		bl	__aeabi_dcmplt
  97              	.LVL8:
  98 0062 28B1     		cbz	r0, .L8
  99              	.L2:
  57:main.c        ****         Kd_steering = 0;
 100              		.loc 1 57 0 is_stmt 1
 101 0064 0020     		movs	r0, #0
 102 0066 0021     		movs	r1, #0
 103 0068 344B     		ldr	r3, .L10+52
 104 006a C3E90001 		strd	r0, [r3]
 105 006e 05E0     		b	.L5
 106              	.L8:
  58:main.c        ****     } else {
  59:main.c        ****         Kd_steering = -0.05;
 107              		.loc 1 59 0
 108 0070 29A1     		adr	r1, .L10+16
 109 0072 D1E90001 		ldrd	r0, [r1]
 110 0076 314B     		ldr	r3, .L10+52
 111 0078 C3E90001 		strd	r0, [r3]
 112              	.L5:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 4


  60:main.c        ****     }
  61:main.c        ****     
  62:main.c        ****     // Calculate the steering output using PID
  63:main.c        ****     steeringOutput = PWM_CENTER + (Kp_steering * error_steering) + (Kd_steering * delta_error);
 113              		.loc 1 63 0
 114 007c DFF8BCA0 		ldr	r10, .L10+52
 115 0080 DAE90223 		ldrd	r2, [r10, #8]
 116 0084 2046     		mov	r0, r4
 117 0086 2946     		mov	r1, r5
 118 0088 FFF7FEFF 		bl	__aeabi_dmul
 119              	.LVL9:
 120 008c 24A3     		adr	r3, .L10+24
 121 008e D3E90023 		ldrd	r2, [r3]
 122 0092 FFF7FEFF 		bl	__aeabi_dadd
 123              	.LVL10:
 124 0096 0646     		mov	r6, r0
 125 0098 0F46     		mov	r7, r1
 126 009a DAE90023 		ldrd	r2, [r10]
 127 009e 4046     		mov	r0, r8
 128 00a0 4946     		mov	r1, r9
 129 00a2 FFF7FEFF 		bl	__aeabi_dmul
 130              	.LVL11:
 131 00a6 0246     		mov	r2, r0
 132 00a8 0B46     		mov	r3, r1
 133 00aa 3046     		mov	r0, r6
 134 00ac 3946     		mov	r1, r7
 135 00ae FFF7FEFF 		bl	__aeabi_dadd
 136              	.LVL12:
 137 00b2 1F4E     		ldr	r6, .L10+40
 138 00b4 C6E90401 		strd	r0, [r6, #16]
  64:main.c        ****     steeringPWM = (uint16)steeringOutput; // cast to uint16
 139              		.loc 1 64 0
 140 00b8 FFF7FEFF 		bl	__aeabi_d2uiz
 141              	.LVL13:
 142 00bc 80B2     		uxth	r0, r0
 143 00be B061     		str	r0, [r6, #24]
  65:main.c        ****     
  66:main.c        ****     // Limit steering PWM within the min and max bounds
  67:main.c        ****     if (steeringPWM < PWM_MIN) steeringPWM = PWM_MIN;
 144              		.loc 1 67 0
 145 00c0 B0F57F7F 		cmp	r0, #1020
 146 00c4 02DA     		bge	.L6
 147              		.loc 1 67 0 is_stmt 0 discriminator 1
 148 00c6 4FF47F72 		mov	r2, #1020
 149 00ca B261     		str	r2, [r6, #24]
 150              	.L6:
  68:main.c        ****     if (steeringPWM > PWM_MAX) steeringPWM = PWM_MAX;
 151              		.loc 1 68 0 is_stmt 1
 152 00cc 184B     		ldr	r3, .L10+40
 153 00ce 9A69     		ldr	r2, [r3, #24]
 154 00d0 40F2BC73 		movw	r3, #1980
 155 00d4 9A42     		cmp	r2, r3
 156 00d6 02DD     		ble	.L7
 157              		.loc 1 68 0 is_stmt 0 discriminator 1
 158 00d8 1A46     		mov	r2, r3
 159 00da 154B     		ldr	r3, .L10+40
 160 00dc 9A61     		str	r2, [r3, #24]
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 5


 161              	.L7:
  69:main.c        ****     
  70:main.c        ****     // Store previous error
  71:main.c        ****     prev_steering = error_steering;
 162              		.loc 1 71 0 is_stmt 1
 163 00de 144B     		ldr	r3, .L10+40
 164 00e0 C3E90245 		strd	r4, [r3, #8]
  72:main.c        ****     
  73:main.c        ****     // Update servo
  74:main.c        ****     SERVO_PWM_WriteCompare(steeringPWM);
 165              		.loc 1 74 0
 166 00e4 188B     		ldrh	r0, [r3, #24]
 167 00e6 FFF7FEFF 		bl	SERVO_PWM_WriteCompare
 168              	.LVL14:
  75:main.c        ****     
  76:main.c        ****     // DEBUG
  77:main.c        ****     //UART_PutString("\r\n NAV INTR");
  78:main.c        ****     sprintf(str_buf, "\r\n time:, %f,", sampledTime);
 169              		.loc 1 78 0
 170 00ea 154C     		ldr	r4, .L10+56
 171 00ec 0E4B     		ldr	r3, .L10+32
 172 00ee D3E90023 		ldrd	r2, [r3]
 173 00f2 1449     		ldr	r1, .L10+60
 174 00f4 2046     		mov	r0, r4
 175 00f6 FFF7FEFF 		bl	sprintf
 176              	.LVL15:
  79:main.c        ****     UART_PutString(str_buf);
 177              		.loc 1 79 0
 178 00fa 2046     		mov	r0, r4
 179 00fc FFF7FEFF 		bl	UART_PutString
 180              	.LVL16:
 181 0100 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 182              	.LVL17:
 183              	.L11:
 184 0104 AFF30080 		.align	3
 185              	.L10:
 186 0108 00000000 		.word	0
 187 010c E0FFEF40 		.word	1089470432
 188 0110 00000000 		.word	0
 189 0114 00C06240 		.word	1080213504
 190 0118 9A999999 		.word	-1717986918
 191 011c 9999A9BF 		.word	-1079404135
 192 0120 00000000 		.word	0
 193 0124 00709740 		.word	1083666432
 194 0128 00000000 		.word	sampledTime
 195 012c 00188540 		.word	1082464256
 196 0130 00000000 		.word	.LANCHOR0
 197 0134 00E09540 		.word	1083564032
 198 0138 00C062C0 		.word	-1067270144
 199 013c 00000000 		.word	.LANCHOR1
 200 0140 00000000 		.word	str_buf
 201 0144 00000000 		.word	.LC0
 202              		.cfi_endproc
 203              	.LFE64:
 204              		.size	steer_inter, .-steer_inter
 205              		.section	.text.speed_inter,"ax",%progbits
 206              		.align	2
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 6


 207              		.global	speed_inter
 208              		.thumb
 209              		.thumb_func
 210              		.type	speed_inter, %function
 211              	speed_inter:
 212              	.LFB65:
  80:main.c        ****     /*sprintf(str_buf, "\r\n steering error:  %f", error_steering);
  81:main.c        ****     UART_PutString(str_buf);
  82:main.c        ****     sprintf(str_buf, "\r\n steering pwm:  %f", steeringOutput);
  83:main.c        ****     UART_PutString(str_buf);
  84:main.c        ****     */
  85:main.c        **** }
  86:main.c        **** 
  87:main.c        **** 
  88:main.c        **** CY_ISR(speed_inter) {
 213              		.loc 1 88 0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 2DE9D043 		push	{r4, r6, r7, r8, r9, lr}
 218              		.cfi_def_cfa_offset 24
 219              		.cfi_offset 4, -24
 220              		.cfi_offset 6, -20
 221              		.cfi_offset 7, -16
 222              		.cfi_offset 8, -12
 223              		.cfi_offset 9, -8
 224              		.cfi_offset 14, -4
  89:main.c        ****     // Read timer capture value
  90:main.c        ****     new = TIMER_ReadCapture();
 225              		.loc 1 90 0
 226 0004 FFF7FEFF 		bl	TIMER_ReadCapture
 227              	.LVL18:
 228 0008 374B     		ldr	r3, .L22+8
 229 000a 1880     		strh	r0, [r3]	@ movhi
  91:main.c        ****     
  92:main.c        ****     // Calculate elapsed time, handling timer overflow
  93:main.c        ****     if(new <= old)
 230              		.loc 1 93 0
 231 000c 374B     		ldr	r3, .L22+12
 232 000e 1B8A     		ldrh	r3, [r3, #16]
 233 0010 9842     		cmp	r0, r3
 234 0012 03D8     		bhi	.L13
  94:main.c        ****         elapsed = old - new;
 235              		.loc 1 94 0
 236 0014 1B1A     		subs	r3, r3, r0
 237 0016 364A     		ldr	r2, .L22+16
 238 0018 1380     		strh	r3, [r2]	@ movhi
 239 001a 03E0     		b	.L14
 240              	.L13:
  95:main.c        ****     else
  96:main.c        ****         elapsed = 65535 - new + old;
 241              		.loc 1 96 0
 242 001c 1B1A     		subs	r3, r3, r0
 243 001e 013B     		subs	r3, r3, #1
 244 0020 334A     		ldr	r2, .L22+16
 245 0022 1380     		strh	r3, [r2]	@ movhi
 246              	.L14:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 7


  97:main.c        ****     
  98:main.c        ****     // Calculate speed based on elapsed time
  99:main.c        ****     speed = 1256.0 / (double) elapsed;
 247              		.loc 1 99 0
 248 0024 324B     		ldr	r3, .L22+16
 249 0026 1888     		ldrh	r0, [r3]
 250 0028 FFF7FEFF 		bl	__aeabi_ui2d
 251              	.LVL19:
 252 002c 0246     		mov	r2, r0
 253 002e 0B46     		mov	r3, r1
 254 0030 0020     		movs	r0, #0
 255 0032 3049     		ldr	r1, .L22+20
 256 0034 FFF7FEFF 		bl	__aeabi_ddiv
 257              	.LVL20:
 258 0038 0246     		mov	r2, r0
 259 003a 0B46     		mov	r3, r1
 260 003c 2E4C     		ldr	r4, .L22+24
 261 003e C4E90823 		strd	r2, [r4, #32]
 100:main.c        ****     
 101:main.c        ****     // Calculate error and accumulate for integral control
 102:main.c        ****     err = TARGET_SPEED - speed;
 262              		.loc 1 102 0
 263 0042 27A1     		adr	r1, .L22
 264 0044 D1E90001 		ldrd	r0, [r1]
 265 0048 FFF7FEFF 		bl	__aeabi_dsub
 266              	.LVL21:
 267 004c 8046     		mov	r8, r0
 268 004e 8946     		mov	r9, r1
 269 0050 2A4B     		ldr	r3, .L22+28
 270 0052 C3E90089 		strd	r8, [r3]
 103:main.c        ****     acc_err += err;
 271              		.loc 1 103 0
 272 0056 D4E90A23 		ldrd	r2, [r4, #40]
 273 005a FFF7FEFF 		bl	__aeabi_dadd
 274              	.LVL22:
 275 005e 0646     		mov	r6, r0
 276 0060 0F46     		mov	r7, r1
 277 0062 C4E90A67 		strd	r6, [r4, #40]
 104:main.c        ****     
 105:main.c        ****     // Calculate PWM value using PID control
 106:main.c        ****     pwm = PWM_base + Kp * err + Ki * acc_err;
 278              		.loc 1 106 0
 279 0066 0022     		movs	r2, #0
 280 0068 254B     		ldr	r3, .L22+32
 281 006a 4046     		mov	r0, r8
 282 006c 4946     		mov	r1, r9
 283 006e FFF7FEFF 		bl	__aeabi_dmul
 284              	.LVL23:
 285 0072 1E4B     		ldr	r3, .L22+12
 286 0074 D3E90623 		ldrd	r2, [r3, #24]
 287 0078 FFF7FEFF 		bl	__aeabi_dadd
 288              	.LVL24:
 289 007c 0246     		mov	r2, r0
 290 007e 0B46     		mov	r3, r1
 291 0080 3046     		mov	r0, r6
 292 0082 3946     		mov	r1, r7
 293 0084 FFF7FEFF 		bl	__aeabi_dadd
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 8


 294              	.LVL25:
 295 0088 1E4B     		ldr	r3, .L22+36
 296 008a C3E90001 		strd	r0, [r3]
 107:main.c        ****    
 108:main.c        ****     
 109:main.c        ****     // Limit PWM value to valid range
 110:main.c        ****     if (pwm < 5)
 297              		.loc 1 110 0
 298 008e 0022     		movs	r2, #0
 299 0090 1D4B     		ldr	r3, .L22+40
 300 0092 FFF7FEFF 		bl	__aeabi_dcmplt
 301              	.LVL26:
 302 0096 20B1     		cbz	r0, .L15
 111:main.c        ****         pwm = 5;
 303              		.loc 1 111 0
 304 0098 0020     		movs	r0, #0
 305 009a 1B49     		ldr	r1, .L22+40
 306 009c 194B     		ldr	r3, .L22+36
 307 009e C3E90001 		strd	r0, [r3]
 308              	.L15:
 112:main.c        ****     if (pwm > 200)
 309              		.loc 1 112 0
 310 00a2 0022     		movs	r2, #0
 311 00a4 194B     		ldr	r3, .L22+44
 312 00a6 1749     		ldr	r1, .L22+36
 313 00a8 D1E90001 		ldrd	r0, [r1]
 314 00ac FFF7FEFF 		bl	__aeabi_dcmpgt
 315              	.LVL27:
 316 00b0 20B1     		cbz	r0, .L17
 113:main.c        ****         pwm = 200;
 317              		.loc 1 113 0
 318 00b2 0020     		movs	r0, #0
 319 00b4 1549     		ldr	r1, .L22+44
 320 00b6 134B     		ldr	r3, .L22+36
 321 00b8 C3E90001 		strd	r0, [r3]
 322              	.L17:
 114:main.c        **** 
 115:main.c        ****     // slow down at curves 
 116:main.c        ****     /* 
 117:main.c        ****     if (error_steering > 150 || error_steering < -150) {
 118:main.c        ****         pwm -= 15;
 119:main.c        ****     }
 120:main.c        ****     */
 121:main.c        ****    
 122:main.c        ****     
 123:main.c        ****         
 124:main.c        ****     // Send speed data to XBee for telemetry
 125:main.c        ****     // ft/s is really mili-ft/s
 126:main.c        ****     // Cast to int because XBee output only works with int
 127:main.c        ****     /*
 128:main.c        ****     UART_PutString("\r\n SPEED INTER");
 129:main.c        ****     sprintf(strbuf,"\r\n %f ft/s", speed);
 130:main.c        ****     UART_PutString(strbuf);
 131:main.c        ****     sprintf(strbuf,"\r\n pwm = %f", pwm);
 132:main.c        ****     UART_PutString(strbuf);
 133:main.c        ****     */
 134:main.c        ****     
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 9


 135:main.c        ****     // Update PWM value to control motor speed
 136:main.c        ****     PWM_WriteCompare((uint16)pwm);
 323              		.loc 1 136 0
 324 00bc 114B     		ldr	r3, .L22+36
 325 00be D3E90001 		ldrd	r0, [r3]
 326 00c2 FFF7FEFF 		bl	__aeabi_d2uiz
 327              	.LVL28:
 328 00c6 C0B2     		uxtb	r0, r0
 329 00c8 FFF7FEFF 		bl	PWM_WriteCompare
 330              	.LVL29:
 137:main.c        ****     TIMER_ReadStatusRegister();
 331              		.loc 1 137 0
 332 00cc FFF7FEFF 		bl	TIMER_ReadStatusRegister
 333              	.LVL30:
 138:main.c        ****     old = new;
 334              		.loc 1 138 0
 335 00d0 054B     		ldr	r3, .L22+8
 336 00d2 1A88     		ldrh	r2, [r3]
 337 00d4 054B     		ldr	r3, .L22+12
 338 00d6 1A82     		strh	r2, [r3, #16]	@ movhi
 339 00d8 BDE8D083 		pop	{r4, r6, r7, r8, r9, pc}
 340              	.L23:
 341 00dc AFF30080 		.align	3
 342              	.L22:
 343 00e0 33333333 		.word	858993459
 344 00e4 33330D40 		.word	1074606899
 345 00e8 00000000 		.word	new
 346 00ec 00000000 		.word	.LANCHOR1
 347 00f0 00000000 		.word	elapsed
 348 00f4 00A09340 		.word	1083416576
 349 00f8 00000000 		.word	.LANCHOR0
 350 00fc 00000000 		.word	err
 351 0100 00002440 		.word	1076101120
 352 0104 00000000 		.word	pwm
 353 0108 00001440 		.word	1075052544
 354 010c 00006940 		.word	1080623104
 355              		.cfi_endproc
 356              	.LFE65:
 357              		.size	speed_inter, .-speed_inter
 358              		.section	.text.main,"ax",%progbits
 359              		.align	2
 360              		.global	main
 361              		.thumb
 362              		.thumb_func
 363              		.type	main, %function
 364              	main:
 365              	.LFB66:
 139:main.c        **** }
 140:main.c        **** 
 141:main.c        **** // Main function
 142:main.c        **** int main(void) {
 366              		.loc 1 142 0
 367              		.cfi_startproc
 368              		@ Volatile: function does not return.
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 10


 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 3, -8
 374              		.cfi_offset 14, -4
 143:main.c        ****     CyGlobalIntEnable;
 375              		.loc 1 143 0
 376              		.syntax unified
 377              	@ 143 "main.c" 1
 378 0002 62B6     		CPSIE   i
 379              	@ 0 "" 2
 144:main.c        ****     
 145:main.c        ****     // Speed control init
 146:main.c        ****     PWM_Start();
 380              		.loc 1 146 0
 381              		.thumb
 382              		.syntax unified
 383 0004 FFF7FEFF 		bl	PWM_Start
 384              	.LVL31:
 147:main.c        ****     TIMER_Start();
 385              		.loc 1 147 0
 386 0008 FFF7FEFF 		bl	TIMER_Start
 387              	.LVL32:
 148:main.c        ****     UART_Start();
 388              		.loc 1 148 0
 389 000c FFF7FEFF 		bl	UART_Start
 390              	.LVL33:
 149:main.c        **** 
 150:main.c        ****     // Steering control init
 151:main.c        ****     VID_TIMER_Start();
 391              		.loc 1 151 0
 392 0010 FFF7FEFF 		bl	VID_TIMER_Start
 393              	.LVL34:
 152:main.c        ****     SERVO_PWM_Start();
 394              		.loc 1 152 0
 395 0014 FFF7FEFF 		bl	SERVO_PWM_Start
 396              	.LVL35:
 153:main.c        ****     VDAC_Start();
 397              		.loc 1 153 0
 398 0018 FFF7FEFF 		bl	VDAC_Start
 399              	.LVL36:
 154:main.c        ****     COMP_Start();
 400              		.loc 1 154 0
 401 001c FFF7FEFF 		bl	COMP_Start
 402              	.LVL37:
 155:main.c        ****     
 156:main.c        ****     // Interrupts
 157:main.c        ****     INT_SAMPLE_Start();
 403              		.loc 1 157 0
 404 0020 FFF7FEFF 		bl	INT_SAMPLE_Start
 405              	.LVL38:
 158:main.c        ****     INT_SAMPLE_SetVector(steer_inter);
 406              		.loc 1 158 0
 407 0024 0448     		ldr	r0, .L27
 408 0026 FFF7FEFF 		bl	INT_SAMPLE_SetVector
 409              	.LVL39:
 159:main.c        ****     
 160:main.c        ****     HE_ISR_Start();
 410              		.loc 1 160 0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 11


 411 002a FFF7FEFF 		bl	HE_ISR_Start
 412              	.LVL40:
 161:main.c        ****     HE_ISR_SetVector(speed_inter);
 413              		.loc 1 161 0
 414 002e 0348     		ldr	r0, .L27+4
 415 0030 FFF7FEFF 		bl	HE_ISR_SetVector
 416              	.LVL41:
 417              	.L25:
 418 0034 FEE7     		b	.L25
 419              	.L28:
 420 0036 00BF     		.align	2
 421              	.L27:
 422 0038 00000000 		.word	steer_inter
 423 003c 00000000 		.word	speed_inter
 424              		.cfi_endproc
 425              	.LFE66:
 426              		.size	main, .-main
 427              		.comm	str_buf,32,4
 428              		.comm	sampledTime,8,8
 429              		.global	steeringPWM
 430              		.global	steeringOutput
 431              		.global	prev_steering
 432              		.global	error_steering
 433              		.global	Kd_steering
 434              		.global	Kp_steering
 435              		.comm	strbuf,32,4
 436              		.global	acc_err
 437              		.comm	err,8,8
 438              		.comm	pwm,8,8
 439              		.global	PWM_base
 440              		.comm	elapsed,2,2
 441              		.comm	new,2,2
 442              		.global	old
 443              		.global	error
 444              		.global	speed
 445              		.data
 446              		.align	3
 447              		.set	.LANCHOR1,. + 0
 448              		.type	Kd_steering, %object
 449              		.size	Kd_steering, 8
 450              	Kd_steering:
 451 0000 9A999999 		.word	-1717986918
 452 0004 9999A9BF 		.word	-1079404135
 453              		.type	Kp_steering, %object
 454              		.size	Kp_steering, 8
 455              	Kp_steering:
 456 0008 00000000 		.word	0
 457 000c 0000F03F 		.word	1072693248
 458              		.type	old, %object
 459              		.size	old, 2
 460              	old:
 461 0010 FFFF     		.short	-1
 462 0012 00000000 		.space	6
 462      0000
 463              		.type	PWM_base, %object
 464              		.size	PWM_base, 8
 465              	PWM_base:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 12


 466 0018 00000000 		.word	0
 467 001c 00003E40 		.word	1077805056
 468              		.section	.rodata.str1.4,"aMS",%progbits,1
 469              		.align	2
 470              	.LC0:
 471 0000 0D0A2074 		.ascii	"\015\012 time:, %f,\000"
 471      696D653A 
 471      2C202566 
 471      2C00
 472              		.bss
 473              		.align	3
 474              		.set	.LANCHOR0,. + 0
 475              		.type	error_steering, %object
 476              		.size	error_steering, 8
 477              	error_steering:
 478 0000 00000000 		.space	8
 478      00000000 
 479              		.type	prev_steering, %object
 480              		.size	prev_steering, 8
 481              	prev_steering:
 482 0008 00000000 		.space	8
 482      00000000 
 483              		.type	steeringOutput, %object
 484              		.size	steeringOutput, 8
 485              	steeringOutput:
 486 0010 00000000 		.space	8
 486      00000000 
 487              		.type	steeringPWM, %object
 488              		.size	steeringPWM, 4
 489              	steeringPWM:
 490 0018 00000000 		.space	4
 491 001c 00000000 		.space	4
 492              		.type	speed, %object
 493              		.size	speed, 8
 494              	speed:
 495 0020 00000000 		.space	8
 495      00000000 
 496              		.type	acc_err, %object
 497              		.size	acc_err, 8
 498              	acc_err:
 499 0028 00000000 		.space	8
 499      00000000 
 500              		.type	error, %object
 501              		.size	error, 8
 502              	error:
 503 0030 00000000 		.space	8
 503      00000000 
 504              		.text
 505              	.Letext0:
 506              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 507              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 508              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 509              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 510              		.file 6 "Generated_Source\\PSoC5/VID_TIMER.h"
 511              		.file 7 "Generated_Source\\PSoC5/SERVO_PWM.h"
 512              		.file 8 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 513              		.file 9 "Generated_Source\\PSoC5/UART.h"
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 13


 514              		.file 10 "Generated_Source\\PSoC5/TIMER.h"
 515              		.file 11 "Generated_Source\\PSoC5/PWM.h"
 516              		.file 12 "Generated_Source\\PSoC5/VDAC.h"
 517              		.file 13 "Generated_Source\\PSoC5/COMP.h"
 518              		.file 14 "Generated_Source\\PSoC5/INT_SAMPLE.h"
 519              		.file 15 "Generated_Source\\PSoC5/HE_ISR.h"
 520              		.section	.debug_info,"",%progbits
 521              	.Ldebug_info0:
 522 0000 F0030000 		.4byte	0x3f0
 523 0004 0400     		.2byte	0x4
 524 0006 00000000 		.4byte	.Ldebug_abbrev0
 525 000a 04       		.byte	0x4
 526 000b 01       		.uleb128 0x1
 527 000c B8000000 		.4byte	.LASF52
 528 0010 0C       		.byte	0xc
 529 0011 CC020000 		.4byte	.LASF53
 530 0015 E8010000 		.4byte	.LASF54
 531 0019 00000000 		.4byte	.Ldebug_ranges0+0
 532 001d 00000000 		.4byte	0
 533 0021 00000000 		.4byte	.Ldebug_line0
 534 0025 02       		.uleb128 0x2
 535 0026 01       		.byte	0x1
 536 0027 06       		.byte	0x6
 537 0028 9E000000 		.4byte	.LASF0
 538 002c 02       		.uleb128 0x2
 539 002d 01       		.byte	0x1
 540 002e 08       		.byte	0x8
 541 002f AA000000 		.4byte	.LASF1
 542 0033 02       		.uleb128 0x2
 543 0034 02       		.byte	0x2
 544 0035 05       		.byte	0x5
 545 0036 DE010000 		.4byte	.LASF2
 546 003a 02       		.uleb128 0x2
 547 003b 02       		.byte	0x2
 548 003c 07       		.byte	0x7
 549 003d 13000000 		.4byte	.LASF3
 550 0041 03       		.uleb128 0x3
 551 0042 09000000 		.4byte	.LASF9
 552 0046 02       		.byte	0x2
 553 0047 3F       		.byte	0x3f
 554 0048 4C000000 		.4byte	0x4c
 555 004c 02       		.uleb128 0x2
 556 004d 04       		.byte	0x4
 557 004e 05       		.byte	0x5
 558 004f 2F030000 		.4byte	.LASF4
 559 0053 02       		.uleb128 0x2
 560 0054 04       		.byte	0x4
 561 0055 07       		.byte	0x7
 562 0056 6F010000 		.4byte	.LASF5
 563 005a 02       		.uleb128 0x2
 564 005b 08       		.byte	0x8
 565 005c 05       		.byte	0x5
 566 005d B2020000 		.4byte	.LASF6
 567 0061 02       		.uleb128 0x2
 568 0062 08       		.byte	0x8
 569 0063 07       		.byte	0x7
 570 0064 67020000 		.4byte	.LASF7
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 14


 571 0068 04       		.uleb128 0x4
 572 0069 04       		.byte	0x4
 573 006a 05       		.byte	0x5
 574 006b 696E7400 		.ascii	"int\000"
 575 006f 02       		.uleb128 0x2
 576 0070 04       		.byte	0x4
 577 0071 07       		.byte	0x7
 578 0072 4E020000 		.4byte	.LASF8
 579 0076 03       		.uleb128 0x3
 580 0077 66000000 		.4byte	.LASF10
 581 007b 03       		.byte	0x3
 582 007c 2C       		.byte	0x2c
 583 007d 41000000 		.4byte	0x41
 584 0081 05       		.uleb128 0x5
 585 0082 31020000 		.4byte	.LASF11
 586 0086 04       		.byte	0x4
 587 0087 EA01     		.2byte	0x1ea
 588 0089 3A000000 		.4byte	0x3a
 589 008d 02       		.uleb128 0x2
 590 008e 04       		.byte	0x4
 591 008f 04       		.byte	0x4
 592 0090 7F000000 		.4byte	.LASF12
 593 0094 02       		.uleb128 0x2
 594 0095 08       		.byte	0x8
 595 0096 04       		.byte	0x4
 596 0097 BF010000 		.4byte	.LASF13
 597 009b 02       		.uleb128 0x2
 598 009c 01       		.byte	0x1
 599 009d 08       		.byte	0x8
 600 009e D3020000 		.4byte	.LASF14
 601 00a2 02       		.uleb128 0x2
 602 00a3 08       		.byte	0x8
 603 00a4 04       		.byte	0x4
 604 00a5 52030000 		.4byte	.LASF15
 605 00a9 02       		.uleb128 0x2
 606 00aa 04       		.byte	0x4
 607 00ab 07       		.byte	0x7
 608 00ac A3020000 		.4byte	.LASF16
 609 00b0 06       		.uleb128 0x6
 610 00b1 4B000000 		.4byte	.LASF17
 611 00b5 01       		.byte	0x1
 612 00b6 2E       		.byte	0x2e
 613 00b7 00000000 		.4byte	.LFB64
 614 00bb 48010000 		.4byte	.LFE64-.LFB64
 615 00bf 01       		.uleb128 0x1
 616 00c0 9C       		.byte	0x9c
 617 00c1 14010000 		.4byte	0x114
 618 00c5 07       		.uleb128 0x7
 619 00c6 E8020000 		.4byte	.LASF55
 620 00ca 01       		.byte	0x1
 621 00cb 35       		.byte	0x35
 622 00cc 94000000 		.4byte	0x94
 623 00d0 00000000 		.4byte	.LLST0
 624 00d4 08       		.uleb128 0x8
 625 00d5 08000000 		.4byte	.LVL0
 626 00d9 2D030000 		.4byte	0x32d
 627 00dd 08       		.uleb128 0x8
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 15


 628 00de EA000000 		.4byte	.LVL14
 629 00e2 38030000 		.4byte	0x338
 630 00e6 09       		.uleb128 0x9
 631 00e7 FA000000 		.4byte	.LVL15
 632 00eb 43030000 		.4byte	0x343
 633 00ef 03010000 		.4byte	0x103
 634 00f3 0A       		.uleb128 0xa
 635 00f4 01       		.uleb128 0x1
 636 00f5 50       		.byte	0x50
 637 00f6 02       		.uleb128 0x2
 638 00f7 74       		.byte	0x74
 639 00f8 00       		.sleb128 0
 640 00f9 0A       		.uleb128 0xa
 641 00fa 01       		.uleb128 0x1
 642 00fb 51       		.byte	0x51
 643 00fc 05       		.uleb128 0x5
 644 00fd 03       		.byte	0x3
 645 00fe 00000000 		.4byte	.LC0
 646 0102 00       		.byte	0
 647 0103 0B       		.uleb128 0xb
 648 0104 00010000 		.4byte	.LVL16
 649 0108 4E030000 		.4byte	0x34e
 650 010c 0A       		.uleb128 0xa
 651 010d 01       		.uleb128 0x1
 652 010e 50       		.byte	0x50
 653 010f 02       		.uleb128 0x2
 654 0110 74       		.byte	0x74
 655 0111 00       		.sleb128 0
 656 0112 00       		.byte	0
 657 0113 00       		.byte	0
 658 0114 06       		.uleb128 0x6
 659 0115 5B020000 		.4byte	.LASF18
 660 0119 01       		.byte	0x1
 661 011a 58       		.byte	0x58
 662 011b 00000000 		.4byte	.LFB65
 663 011f 10010000 		.4byte	.LFE65-.LFB65
 664 0123 01       		.uleb128 0x1
 665 0124 9C       		.byte	0x9c
 666 0125 45010000 		.4byte	0x145
 667 0129 08       		.uleb128 0x8
 668 012a 08000000 		.4byte	.LVL18
 669 012e 59030000 		.4byte	0x359
 670 0132 08       		.uleb128 0x8
 671 0133 CC000000 		.4byte	.LVL29
 672 0137 64030000 		.4byte	0x364
 673 013b 08       		.uleb128 0x8
 674 013c D0000000 		.4byte	.LVL30
 675 0140 6F030000 		.4byte	0x36f
 676 0144 00       		.byte	0
 677 0145 0C       		.uleb128 0xc
 678 0146 49020000 		.4byte	.LASF56
 679 014a 01       		.byte	0x1
 680 014b 8E       		.byte	0x8e
 681 014c 68000000 		.4byte	0x68
 682 0150 00000000 		.4byte	.LFB66
 683 0154 40000000 		.4byte	.LFE66-.LFB66
 684 0158 01       		.uleb128 0x1
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 16


 685 0159 9C       		.byte	0x9c
 686 015a DA010000 		.4byte	0x1da
 687 015e 08       		.uleb128 0x8
 688 015f 08000000 		.4byte	.LVL31
 689 0163 7A030000 		.4byte	0x37a
 690 0167 08       		.uleb128 0x8
 691 0168 0C000000 		.4byte	.LVL32
 692 016c 85030000 		.4byte	0x385
 693 0170 08       		.uleb128 0x8
 694 0171 10000000 		.4byte	.LVL33
 695 0175 90030000 		.4byte	0x390
 696 0179 08       		.uleb128 0x8
 697 017a 14000000 		.4byte	.LVL34
 698 017e 9B030000 		.4byte	0x39b
 699 0182 08       		.uleb128 0x8
 700 0183 18000000 		.4byte	.LVL35
 701 0187 A6030000 		.4byte	0x3a6
 702 018b 08       		.uleb128 0x8
 703 018c 1C000000 		.4byte	.LVL36
 704 0190 B1030000 		.4byte	0x3b1
 705 0194 08       		.uleb128 0x8
 706 0195 20000000 		.4byte	.LVL37
 707 0199 BC030000 		.4byte	0x3bc
 708 019d 08       		.uleb128 0x8
 709 019e 24000000 		.4byte	.LVL38
 710 01a2 C7030000 		.4byte	0x3c7
 711 01a6 09       		.uleb128 0x9
 712 01a7 2A000000 		.4byte	.LVL39
 713 01ab D2030000 		.4byte	0x3d2
 714 01af BD010000 		.4byte	0x1bd
 715 01b3 0A       		.uleb128 0xa
 716 01b4 01       		.uleb128 0x1
 717 01b5 50       		.byte	0x50
 718 01b6 05       		.uleb128 0x5
 719 01b7 03       		.byte	0x3
 720 01b8 00000000 		.4byte	steer_inter
 721 01bc 00       		.byte	0
 722 01bd 08       		.uleb128 0x8
 723 01be 2E000000 		.4byte	.LVL40
 724 01c2 DD030000 		.4byte	0x3dd
 725 01c6 0B       		.uleb128 0xb
 726 01c7 34000000 		.4byte	.LVL41
 727 01cb E8030000 		.4byte	0x3e8
 728 01cf 0A       		.uleb128 0xa
 729 01d0 01       		.uleb128 0x1
 730 01d1 50       		.byte	0x50
 731 01d2 05       		.uleb128 0x5
 732 01d3 03       		.byte	0x3
 733 01d4 00000000 		.4byte	speed_inter
 734 01d8 00       		.byte	0
 735 01d9 00       		.byte	0
 736 01da 0D       		.uleb128 0xd
 737 01db AA010000 		.4byte	.LASF19
 738 01df 05       		.byte	0x5
 739 01e0 1207     		.2byte	0x712
 740 01e2 E6010000 		.4byte	0x1e6
 741 01e6 0E       		.uleb128 0xe
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 17


 742 01e7 76000000 		.4byte	0x76
 743 01eb 0F       		.uleb128 0xf
 744 01ec 9D020000 		.4byte	.LASF20
 745 01f0 01       		.byte	0x1
 746 01f1 0F       		.byte	0xf
 747 01f2 94000000 		.4byte	0x94
 748 01f6 05       		.uleb128 0x5
 749 01f7 03       		.byte	0x3
 750 01f8 00000000 		.4byte	speed
 751 01fc 0F       		.uleb128 0xf
 752 01fd AC020000 		.4byte	.LASF21
 753 0201 01       		.byte	0x1
 754 0202 10       		.byte	0x10
 755 0203 94000000 		.4byte	0x94
 756 0207 05       		.uleb128 0x5
 757 0208 03       		.byte	0x3
 758 0209 00000000 		.4byte	error
 759 020d 10       		.uleb128 0x10
 760 020e 6F6C6400 		.ascii	"old\000"
 761 0212 01       		.byte	0x1
 762 0213 11       		.byte	0x11
 763 0214 81000000 		.4byte	0x81
 764 0218 05       		.uleb128 0x5
 765 0219 03       		.byte	0x3
 766 021a 00000000 		.4byte	old
 767 021e 10       		.uleb128 0x10
 768 021f 6E657700 		.ascii	"new\000"
 769 0223 01       		.byte	0x1
 770 0224 12       		.byte	0x12
 771 0225 81000000 		.4byte	0x81
 772 0229 05       		.uleb128 0x5
 773 022a 03       		.byte	0x3
 774 022b 00000000 		.4byte	new
 775 022f 0F       		.uleb128 0xf
 776 0230 95020000 		.4byte	.LASF22
 777 0234 01       		.byte	0x1
 778 0235 13       		.byte	0x13
 779 0236 81000000 		.4byte	0x81
 780 023a 05       		.uleb128 0x5
 781 023b 03       		.byte	0x3
 782 023c 00000000 		.4byte	elapsed
 783 0240 0F       		.uleb128 0xf
 784 0241 00000000 		.4byte	.LASF23
 785 0245 01       		.byte	0x1
 786 0246 14       		.byte	0x14
 787 0247 94000000 		.4byte	0x94
 788 024b 05       		.uleb128 0x5
 789 024c 03       		.byte	0x3
 790 024d 00000000 		.4byte	PWM_base
 791 0251 10       		.uleb128 0x10
 792 0252 70776D00 		.ascii	"pwm\000"
 793 0256 01       		.byte	0x1
 794 0257 15       		.byte	0x15
 795 0258 94000000 		.4byte	0x94
 796 025c 05       		.uleb128 0x5
 797 025d 03       		.byte	0x3
 798 025e 00000000 		.4byte	pwm
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 18


 799 0262 10       		.uleb128 0x10
 800 0263 65727200 		.ascii	"err\000"
 801 0267 01       		.byte	0x1
 802 0268 17       		.byte	0x17
 803 0269 94000000 		.4byte	0x94
 804 026d 05       		.uleb128 0x5
 805 026e 03       		.byte	0x3
 806 026f 00000000 		.4byte	err
 807 0273 0F       		.uleb128 0xf
 808 0274 B7010000 		.4byte	.LASF24
 809 0278 01       		.byte	0x1
 810 0279 18       		.byte	0x18
 811 027a 94000000 		.4byte	0x94
 812 027e 05       		.uleb128 0x5
 813 027f 03       		.byte	0x3
 814 0280 00000000 		.4byte	acc_err
 815 0284 11       		.uleb128 0x11
 816 0285 9B000000 		.4byte	0x9b
 817 0289 94020000 		.4byte	0x294
 818 028d 12       		.uleb128 0x12
 819 028e A9000000 		.4byte	0xa9
 820 0292 1F       		.byte	0x1f
 821 0293 00       		.byte	0
 822 0294 0F       		.uleb128 0xf
 823 0295 D7010000 		.4byte	.LASF25
 824 0299 01       		.byte	0x1
 825 029a 1A       		.byte	0x1a
 826 029b 84020000 		.4byte	0x284
 827 029f 05       		.uleb128 0x5
 828 02a0 03       		.byte	0x3
 829 02a1 00000000 		.4byte	strbuf
 830 02a5 0F       		.uleb128 0xf
 831 02a6 C0020000 		.4byte	.LASF26
 832 02aa 01       		.byte	0x1
 833 02ab 1E       		.byte	0x1e
 834 02ac 94000000 		.4byte	0x94
 835 02b0 05       		.uleb128 0x5
 836 02b1 03       		.byte	0x3
 837 02b2 00000000 		.4byte	Kp_steering
 838 02b6 0F       		.uleb128 0xf
 839 02b7 3F000000 		.4byte	.LASF27
 840 02bb 01       		.byte	0x1
 841 02bc 1F       		.byte	0x1f
 842 02bd 94000000 		.4byte	0x94
 843 02c1 05       		.uleb128 0x5
 844 02c2 03       		.byte	0x3
 845 02c3 00000000 		.4byte	Kd_steering
 846 02c7 0F       		.uleb128 0xf
 847 02c8 57000000 		.4byte	.LASF28
 848 02cc 01       		.byte	0x1
 849 02cd 21       		.byte	0x21
 850 02ce 94000000 		.4byte	0x94
 851 02d2 05       		.uleb128 0x5
 852 02d3 03       		.byte	0x3
 853 02d4 00000000 		.4byte	error_steering
 854 02d8 0F       		.uleb128 0xf
 855 02d9 38030000 		.4byte	.LASF29
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 19


 856 02dd 01       		.byte	0x1
 857 02de 22       		.byte	0x22
 858 02df 94000000 		.4byte	0x94
 859 02e3 05       		.uleb128 0x5
 860 02e4 03       		.byte	0x3
 861 02e5 00000000 		.4byte	prev_steering
 862 02e9 0F       		.uleb128 0xf
 863 02ea 7E020000 		.4byte	.LASF30
 864 02ee 01       		.byte	0x1
 865 02ef 23       		.byte	0x23
 866 02f0 94000000 		.4byte	0x94
 867 02f4 05       		.uleb128 0x5
 868 02f5 03       		.byte	0x3
 869 02f6 00000000 		.4byte	steeringOutput
 870 02fa 0F       		.uleb128 0xf
 871 02fb 33000000 		.4byte	.LASF31
 872 02ff 01       		.byte	0x1
 873 0300 24       		.byte	0x24
 874 0301 68000000 		.4byte	0x68
 875 0305 05       		.uleb128 0x5
 876 0306 03       		.byte	0x3
 877 0307 00000000 		.4byte	steeringPWM
 878 030b 0F       		.uleb128 0xf
 879 030c F4020000 		.4byte	.LASF32
 880 0310 01       		.byte	0x1
 881 0311 25       		.byte	0x25
 882 0312 94000000 		.4byte	0x94
 883 0316 05       		.uleb128 0x5
 884 0317 03       		.byte	0x3
 885 0318 00000000 		.4byte	sampledTime
 886 031c 0F       		.uleb128 0xf
 887 031d 81010000 		.4byte	.LASF33
 888 0321 01       		.byte	0x1
 889 0322 2B       		.byte	0x2b
 890 0323 84020000 		.4byte	0x284
 891 0327 05       		.uleb128 0x5
 892 0328 03       		.byte	0x3
 893 0329 00000000 		.4byte	str_buf
 894 032d 13       		.uleb128 0x13
 895 032e 94010000 		.4byte	.LASF34
 896 0332 94010000 		.4byte	.LASF34
 897 0336 06       		.byte	0x6
 898 0337 6B       		.byte	0x6b
 899 0338 13       		.uleb128 0x13
 900 0339 46010000 		.4byte	.LASF35
 901 033d 46010000 		.4byte	.LASF35
 902 0341 07       		.byte	0x7
 903 0342 C3       		.byte	0xc3
 904 0343 13       		.uleb128 0x13
 905 0344 8D020000 		.4byte	.LASF36
 906 0348 8D020000 		.4byte	.LASF36
 907 034c 08       		.byte	0x8
 908 034d E7       		.byte	0xe7
 909 034e 13       		.uleb128 0x13
 910 034f 5E030000 		.4byte	.LASF37
 911 0353 5E030000 		.4byte	.LASF37
 912 0357 09       		.byte	0x9
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 20


 913 0358 8B       		.byte	0x8b
 914 0359 13       		.uleb128 0x13
 915 035a 5D010000 		.4byte	.LASF38
 916 035e 5D010000 		.4byte	.LASF38
 917 0362 0A       		.byte	0xa
 918 0363 6B       		.byte	0x6b
 919 0364 13       		.uleb128 0x13
 920 0365 C6010000 		.4byte	.LASF39
 921 0369 C6010000 		.4byte	.LASF39
 922 036d 0B       		.byte	0xb
 923 036e C3       		.byte	0xc3
 924 036f 13       		.uleb128 0x13
 925 0370 85000000 		.4byte	.LASF40
 926 0374 85000000 		.4byte	.LASF40
 927 0378 0A       		.byte	0xa
 928 0379 5E       		.byte	0x5e
 929 037a 13       		.uleb128 0x13
 930 037b 15030000 		.4byte	.LASF41
 931 037f 15030000 		.4byte	.LASF41
 932 0383 0B       		.byte	0xb
 933 0384 92       		.byte	0x92
 934 0385 13       		.uleb128 0x13
 935 0386 46030000 		.4byte	.LASF42
 936 038a 46030000 		.4byte	.LASF42
 937 038e 0A       		.byte	0xa
 938 038f 5A       		.byte	0x5a
 939 0390 13       		.uleb128 0x13
 940 0391 89010000 		.4byte	.LASF43
 941 0395 89010000 		.4byte	.LASF43
 942 0399 09       		.byte	0x9
 943 039a 54       		.byte	0x54
 944 039b 13       		.uleb128 0x13
 945 039c D8020000 		.4byte	.LASF44
 946 03a0 D8020000 		.4byte	.LASF44
 947 03a4 06       		.byte	0x6
 948 03a5 5A       		.byte	0x5a
 949 03a6 13       		.uleb128 0x13
 950 03a7 1F030000 		.4byte	.LASF45
 951 03ab 1F030000 		.4byte	.LASF45
 952 03af 07       		.byte	0x7
 953 03b0 92       		.byte	0x92
 954 03b1 13       		.uleb128 0x13
 955 03b2 6D030000 		.4byte	.LASF46
 956 03b6 6D030000 		.4byte	.LASF46
 957 03ba 0C       		.byte	0xc
 958 03bb 33       		.byte	0x33
 959 03bc 13       		.uleb128 0x13
 960 03bd 78030000 		.4byte	.LASF47
 961 03c1 78030000 		.4byte	.LASF47
 962 03c5 0D       		.byte	0xd
 963 03c6 3F       		.byte	0x3f
 964 03c7 13       		.uleb128 0x13
 965 03c8 6E000000 		.4byte	.LASF48
 966 03cc 6E000000 		.4byte	.LASF48
 967 03d0 0E       		.byte	0xe
 968 03d1 17       		.byte	0x17
 969 03d2 13       		.uleb128 0x13
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 21


 970 03d3 00030000 		.4byte	.LASF49
 971 03d7 00030000 		.4byte	.LASF49
 972 03db 0E       		.byte	0xe
 973 03dc 1D       		.byte	0x1d
 974 03dd 13       		.uleb128 0x13
 975 03de 26000000 		.4byte	.LASF50
 976 03e2 26000000 		.4byte	.LASF50
 977 03e6 0F       		.byte	0xf
 978 03e7 17       		.byte	0x17
 979 03e8 13       		.uleb128 0x13
 980 03e9 38020000 		.4byte	.LASF51
 981 03ed 38020000 		.4byte	.LASF51
 982 03f1 0F       		.byte	0xf
 983 03f2 1D       		.byte	0x1d
 984 03f3 00       		.byte	0
 985              		.section	.debug_abbrev,"",%progbits
 986              	.Ldebug_abbrev0:
 987 0000 01       		.uleb128 0x1
 988 0001 11       		.uleb128 0x11
 989 0002 01       		.byte	0x1
 990 0003 25       		.uleb128 0x25
 991 0004 0E       		.uleb128 0xe
 992 0005 13       		.uleb128 0x13
 993 0006 0B       		.uleb128 0xb
 994 0007 03       		.uleb128 0x3
 995 0008 0E       		.uleb128 0xe
 996 0009 1B       		.uleb128 0x1b
 997 000a 0E       		.uleb128 0xe
 998 000b 55       		.uleb128 0x55
 999 000c 17       		.uleb128 0x17
 1000 000d 11       		.uleb128 0x11
 1001 000e 01       		.uleb128 0x1
 1002 000f 10       		.uleb128 0x10
 1003 0010 17       		.uleb128 0x17
 1004 0011 00       		.byte	0
 1005 0012 00       		.byte	0
 1006 0013 02       		.uleb128 0x2
 1007 0014 24       		.uleb128 0x24
 1008 0015 00       		.byte	0
 1009 0016 0B       		.uleb128 0xb
 1010 0017 0B       		.uleb128 0xb
 1011 0018 3E       		.uleb128 0x3e
 1012 0019 0B       		.uleb128 0xb
 1013 001a 03       		.uleb128 0x3
 1014 001b 0E       		.uleb128 0xe
 1015 001c 00       		.byte	0
 1016 001d 00       		.byte	0
 1017 001e 03       		.uleb128 0x3
 1018 001f 16       		.uleb128 0x16
 1019 0020 00       		.byte	0
 1020 0021 03       		.uleb128 0x3
 1021 0022 0E       		.uleb128 0xe
 1022 0023 3A       		.uleb128 0x3a
 1023 0024 0B       		.uleb128 0xb
 1024 0025 3B       		.uleb128 0x3b
 1025 0026 0B       		.uleb128 0xb
 1026 0027 49       		.uleb128 0x49
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 22


 1027 0028 13       		.uleb128 0x13
 1028 0029 00       		.byte	0
 1029 002a 00       		.byte	0
 1030 002b 04       		.uleb128 0x4
 1031 002c 24       		.uleb128 0x24
 1032 002d 00       		.byte	0
 1033 002e 0B       		.uleb128 0xb
 1034 002f 0B       		.uleb128 0xb
 1035 0030 3E       		.uleb128 0x3e
 1036 0031 0B       		.uleb128 0xb
 1037 0032 03       		.uleb128 0x3
 1038 0033 08       		.uleb128 0x8
 1039 0034 00       		.byte	0
 1040 0035 00       		.byte	0
 1041 0036 05       		.uleb128 0x5
 1042 0037 16       		.uleb128 0x16
 1043 0038 00       		.byte	0
 1044 0039 03       		.uleb128 0x3
 1045 003a 0E       		.uleb128 0xe
 1046 003b 3A       		.uleb128 0x3a
 1047 003c 0B       		.uleb128 0xb
 1048 003d 3B       		.uleb128 0x3b
 1049 003e 05       		.uleb128 0x5
 1050 003f 49       		.uleb128 0x49
 1051 0040 13       		.uleb128 0x13
 1052 0041 00       		.byte	0
 1053 0042 00       		.byte	0
 1054 0043 06       		.uleb128 0x6
 1055 0044 2E       		.uleb128 0x2e
 1056 0045 01       		.byte	0x1
 1057 0046 3F       		.uleb128 0x3f
 1058 0047 19       		.uleb128 0x19
 1059 0048 03       		.uleb128 0x3
 1060 0049 0E       		.uleb128 0xe
 1061 004a 3A       		.uleb128 0x3a
 1062 004b 0B       		.uleb128 0xb
 1063 004c 3B       		.uleb128 0x3b
 1064 004d 0B       		.uleb128 0xb
 1065 004e 27       		.uleb128 0x27
 1066 004f 19       		.uleb128 0x19
 1067 0050 11       		.uleb128 0x11
 1068 0051 01       		.uleb128 0x1
 1069 0052 12       		.uleb128 0x12
 1070 0053 06       		.uleb128 0x6
 1071 0054 40       		.uleb128 0x40
 1072 0055 18       		.uleb128 0x18
 1073 0056 9642     		.uleb128 0x2116
 1074 0058 19       		.uleb128 0x19
 1075 0059 01       		.uleb128 0x1
 1076 005a 13       		.uleb128 0x13
 1077 005b 00       		.byte	0
 1078 005c 00       		.byte	0
 1079 005d 07       		.uleb128 0x7
 1080 005e 34       		.uleb128 0x34
 1081 005f 00       		.byte	0
 1082 0060 03       		.uleb128 0x3
 1083 0061 0E       		.uleb128 0xe
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 23


 1084 0062 3A       		.uleb128 0x3a
 1085 0063 0B       		.uleb128 0xb
 1086 0064 3B       		.uleb128 0x3b
 1087 0065 0B       		.uleb128 0xb
 1088 0066 49       		.uleb128 0x49
 1089 0067 13       		.uleb128 0x13
 1090 0068 02       		.uleb128 0x2
 1091 0069 17       		.uleb128 0x17
 1092 006a 00       		.byte	0
 1093 006b 00       		.byte	0
 1094 006c 08       		.uleb128 0x8
 1095 006d 898201   		.uleb128 0x4109
 1096 0070 00       		.byte	0
 1097 0071 11       		.uleb128 0x11
 1098 0072 01       		.uleb128 0x1
 1099 0073 31       		.uleb128 0x31
 1100 0074 13       		.uleb128 0x13
 1101 0075 00       		.byte	0
 1102 0076 00       		.byte	0
 1103 0077 09       		.uleb128 0x9
 1104 0078 898201   		.uleb128 0x4109
 1105 007b 01       		.byte	0x1
 1106 007c 11       		.uleb128 0x11
 1107 007d 01       		.uleb128 0x1
 1108 007e 31       		.uleb128 0x31
 1109 007f 13       		.uleb128 0x13
 1110 0080 01       		.uleb128 0x1
 1111 0081 13       		.uleb128 0x13
 1112 0082 00       		.byte	0
 1113 0083 00       		.byte	0
 1114 0084 0A       		.uleb128 0xa
 1115 0085 8A8201   		.uleb128 0x410a
 1116 0088 00       		.byte	0
 1117 0089 02       		.uleb128 0x2
 1118 008a 18       		.uleb128 0x18
 1119 008b 9142     		.uleb128 0x2111
 1120 008d 18       		.uleb128 0x18
 1121 008e 00       		.byte	0
 1122 008f 00       		.byte	0
 1123 0090 0B       		.uleb128 0xb
 1124 0091 898201   		.uleb128 0x4109
 1125 0094 01       		.byte	0x1
 1126 0095 11       		.uleb128 0x11
 1127 0096 01       		.uleb128 0x1
 1128 0097 31       		.uleb128 0x31
 1129 0098 13       		.uleb128 0x13
 1130 0099 00       		.byte	0
 1131 009a 00       		.byte	0
 1132 009b 0C       		.uleb128 0xc
 1133 009c 2E       		.uleb128 0x2e
 1134 009d 01       		.byte	0x1
 1135 009e 3F       		.uleb128 0x3f
 1136 009f 19       		.uleb128 0x19
 1137 00a0 03       		.uleb128 0x3
 1138 00a1 0E       		.uleb128 0xe
 1139 00a2 3A       		.uleb128 0x3a
 1140 00a3 0B       		.uleb128 0xb
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 24


 1141 00a4 3B       		.uleb128 0x3b
 1142 00a5 0B       		.uleb128 0xb
 1143 00a6 27       		.uleb128 0x27
 1144 00a7 19       		.uleb128 0x19
 1145 00a8 49       		.uleb128 0x49
 1146 00a9 13       		.uleb128 0x13
 1147 00aa 8701     		.uleb128 0x87
 1148 00ac 19       		.uleb128 0x19
 1149 00ad 11       		.uleb128 0x11
 1150 00ae 01       		.uleb128 0x1
 1151 00af 12       		.uleb128 0x12
 1152 00b0 06       		.uleb128 0x6
 1153 00b1 40       		.uleb128 0x40
 1154 00b2 18       		.uleb128 0x18
 1155 00b3 9742     		.uleb128 0x2117
 1156 00b5 19       		.uleb128 0x19
 1157 00b6 01       		.uleb128 0x1
 1158 00b7 13       		.uleb128 0x13
 1159 00b8 00       		.byte	0
 1160 00b9 00       		.byte	0
 1161 00ba 0D       		.uleb128 0xd
 1162 00bb 34       		.uleb128 0x34
 1163 00bc 00       		.byte	0
 1164 00bd 03       		.uleb128 0x3
 1165 00be 0E       		.uleb128 0xe
 1166 00bf 3A       		.uleb128 0x3a
 1167 00c0 0B       		.uleb128 0xb
 1168 00c1 3B       		.uleb128 0x3b
 1169 00c2 05       		.uleb128 0x5
 1170 00c3 49       		.uleb128 0x49
 1171 00c4 13       		.uleb128 0x13
 1172 00c5 3F       		.uleb128 0x3f
 1173 00c6 19       		.uleb128 0x19
 1174 00c7 3C       		.uleb128 0x3c
 1175 00c8 19       		.uleb128 0x19
 1176 00c9 00       		.byte	0
 1177 00ca 00       		.byte	0
 1178 00cb 0E       		.uleb128 0xe
 1179 00cc 35       		.uleb128 0x35
 1180 00cd 00       		.byte	0
 1181 00ce 49       		.uleb128 0x49
 1182 00cf 13       		.uleb128 0x13
 1183 00d0 00       		.byte	0
 1184 00d1 00       		.byte	0
 1185 00d2 0F       		.uleb128 0xf
 1186 00d3 34       		.uleb128 0x34
 1187 00d4 00       		.byte	0
 1188 00d5 03       		.uleb128 0x3
 1189 00d6 0E       		.uleb128 0xe
 1190 00d7 3A       		.uleb128 0x3a
 1191 00d8 0B       		.uleb128 0xb
 1192 00d9 3B       		.uleb128 0x3b
 1193 00da 0B       		.uleb128 0xb
 1194 00db 49       		.uleb128 0x49
 1195 00dc 13       		.uleb128 0x13
 1196 00dd 3F       		.uleb128 0x3f
 1197 00de 19       		.uleb128 0x19
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 25


 1198 00df 02       		.uleb128 0x2
 1199 00e0 18       		.uleb128 0x18
 1200 00e1 00       		.byte	0
 1201 00e2 00       		.byte	0
 1202 00e3 10       		.uleb128 0x10
 1203 00e4 34       		.uleb128 0x34
 1204 00e5 00       		.byte	0
 1205 00e6 03       		.uleb128 0x3
 1206 00e7 08       		.uleb128 0x8
 1207 00e8 3A       		.uleb128 0x3a
 1208 00e9 0B       		.uleb128 0xb
 1209 00ea 3B       		.uleb128 0x3b
 1210 00eb 0B       		.uleb128 0xb
 1211 00ec 49       		.uleb128 0x49
 1212 00ed 13       		.uleb128 0x13
 1213 00ee 3F       		.uleb128 0x3f
 1214 00ef 19       		.uleb128 0x19
 1215 00f0 02       		.uleb128 0x2
 1216 00f1 18       		.uleb128 0x18
 1217 00f2 00       		.byte	0
 1218 00f3 00       		.byte	0
 1219 00f4 11       		.uleb128 0x11
 1220 00f5 01       		.uleb128 0x1
 1221 00f6 01       		.byte	0x1
 1222 00f7 49       		.uleb128 0x49
 1223 00f8 13       		.uleb128 0x13
 1224 00f9 01       		.uleb128 0x1
 1225 00fa 13       		.uleb128 0x13
 1226 00fb 00       		.byte	0
 1227 00fc 00       		.byte	0
 1228 00fd 12       		.uleb128 0x12
 1229 00fe 21       		.uleb128 0x21
 1230 00ff 00       		.byte	0
 1231 0100 49       		.uleb128 0x49
 1232 0101 13       		.uleb128 0x13
 1233 0102 2F       		.uleb128 0x2f
 1234 0103 0B       		.uleb128 0xb
 1235 0104 00       		.byte	0
 1236 0105 00       		.byte	0
 1237 0106 13       		.uleb128 0x13
 1238 0107 2E       		.uleb128 0x2e
 1239 0108 00       		.byte	0
 1240 0109 3F       		.uleb128 0x3f
 1241 010a 19       		.uleb128 0x19
 1242 010b 3C       		.uleb128 0x3c
 1243 010c 19       		.uleb128 0x19
 1244 010d 6E       		.uleb128 0x6e
 1245 010e 0E       		.uleb128 0xe
 1246 010f 03       		.uleb128 0x3
 1247 0110 0E       		.uleb128 0xe
 1248 0111 3A       		.uleb128 0x3a
 1249 0112 0B       		.uleb128 0xb
 1250 0113 3B       		.uleb128 0x3b
 1251 0114 0B       		.uleb128 0xb
 1252 0115 00       		.byte	0
 1253 0116 00       		.byte	0
 1254 0117 00       		.byte	0
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 26


 1255              		.section	.debug_loc,"",%progbits
 1256              	.Ldebug_loc0:
 1257              	.LLST0:
 1258 0000 46000000 		.4byte	.LVL6
 1259 0004 04010000 		.4byte	.LVL17
 1260 0008 0600     		.2byte	0x6
 1261 000a 58       		.byte	0x58
 1262 000b 93       		.byte	0x93
 1263 000c 04       		.uleb128 0x4
 1264 000d 59       		.byte	0x59
 1265 000e 93       		.byte	0x93
 1266 000f 04       		.uleb128 0x4
 1267 0010 00000000 		.4byte	0
 1268 0014 00000000 		.4byte	0
 1269              		.section	.debug_aranges,"",%progbits
 1270 0000 2C000000 		.4byte	0x2c
 1271 0004 0200     		.2byte	0x2
 1272 0006 00000000 		.4byte	.Ldebug_info0
 1273 000a 04       		.byte	0x4
 1274 000b 00       		.byte	0
 1275 000c 0000     		.2byte	0
 1276 000e 0000     		.2byte	0
 1277 0010 00000000 		.4byte	.LFB64
 1278 0014 48010000 		.4byte	.LFE64-.LFB64
 1279 0018 00000000 		.4byte	.LFB65
 1280 001c 10010000 		.4byte	.LFE65-.LFB65
 1281 0020 00000000 		.4byte	.LFB66
 1282 0024 40000000 		.4byte	.LFE66-.LFB66
 1283 0028 00000000 		.4byte	0
 1284 002c 00000000 		.4byte	0
 1285              		.section	.debug_ranges,"",%progbits
 1286              	.Ldebug_ranges0:
 1287 0000 00000000 		.4byte	.LFB64
 1288 0004 48010000 		.4byte	.LFE64
 1289 0008 00000000 		.4byte	.LFB65
 1290 000c 10010000 		.4byte	.LFE65
 1291 0010 00000000 		.4byte	.LFB66
 1292 0014 40000000 		.4byte	.LFE66
 1293 0018 00000000 		.4byte	0
 1294 001c 00000000 		.4byte	0
 1295              		.section	.debug_line,"",%progbits
 1296              	.Ldebug_line0:
 1297 0000 A2020000 		.section	.debug_str,"MS",%progbits,1
 1297      02002B02 
 1297      00000201 
 1297      FB0E0D00 
 1297      01010101 
 1298              	.LASF23:
 1299 0000 50574D5F 		.ascii	"PWM_base\000"
 1299      62617365 
 1299      00
 1300              	.LASF9:
 1301 0009 5F5F696E 		.ascii	"__int32_t\000"
 1301      7433325F 
 1301      7400
 1302              	.LASF3:
 1303 0013 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 27


 1303      7420756E 
 1303      7369676E 
 1303      65642069 
 1303      6E7400
 1304              	.LASF50:
 1305 0026 48455F49 		.ascii	"HE_ISR_Start\000"
 1305      53525F53 
 1305      74617274 
 1305      00
 1306              	.LASF31:
 1307 0033 73746565 		.ascii	"steeringPWM\000"
 1307      72696E67 
 1307      50574D00 
 1308              	.LASF27:
 1309 003f 4B645F73 		.ascii	"Kd_steering\000"
 1309      74656572 
 1309      696E6700 
 1310              	.LASF17:
 1311 004b 73746565 		.ascii	"steer_inter\000"
 1311      725F696E 
 1311      74657200 
 1312              	.LASF28:
 1313 0057 6572726F 		.ascii	"error_steering\000"
 1313      725F7374 
 1313      65657269 
 1313      6E6700
 1314              	.LASF10:
 1315 0066 696E7433 		.ascii	"int32_t\000"
 1315      325F7400 
 1316              	.LASF48:
 1317 006e 494E545F 		.ascii	"INT_SAMPLE_Start\000"
 1317      53414D50 
 1317      4C455F53 
 1317      74617274 
 1317      00
 1318              	.LASF12:
 1319 007f 666C6F61 		.ascii	"float\000"
 1319      7400
 1320              	.LASF40:
 1321 0085 54494D45 		.ascii	"TIMER_ReadStatusRegister\000"
 1321      525F5265 
 1321      61645374 
 1321      61747573 
 1321      52656769 
 1322              	.LASF0:
 1323 009e 7369676E 		.ascii	"signed char\000"
 1323      65642063 
 1323      68617200 
 1324              	.LASF1:
 1325 00aa 756E7369 		.ascii	"unsigned char\000"
 1325      676E6564 
 1325      20636861 
 1325      7200
 1326              	.LASF52:
 1327 00b8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1327      43313120 
 1327      352E342E 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 28


 1327      31203230 
 1327      31363036 
 1328 00eb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1328      20726576 
 1328      6973696F 
 1328      6E203233 
 1328      37373135 
 1329 011e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1329      66756E63 
 1329      74696F6E 
 1329      2D736563 
 1329      74696F6E 
 1330              	.LASF35:
 1331 0146 53455256 		.ascii	"SERVO_PWM_WriteCompare\000"
 1331      4F5F5057 
 1331      4D5F5772 
 1331      69746543 
 1331      6F6D7061 
 1332              	.LASF38:
 1333 015d 54494D45 		.ascii	"TIMER_ReadCapture\000"
 1333      525F5265 
 1333      61644361 
 1333      70747572 
 1333      6500
 1334              	.LASF5:
 1335 016f 6C6F6E67 		.ascii	"long unsigned int\000"
 1335      20756E73 
 1335      69676E65 
 1335      6420696E 
 1335      7400
 1336              	.LASF33:
 1337 0181 7374725F 		.ascii	"str_buf\000"
 1337      62756600 
 1338              	.LASF43:
 1339 0189 55415254 		.ascii	"UART_Start\000"
 1339      5F537461 
 1339      727400
 1340              	.LASF34:
 1341 0194 5649445F 		.ascii	"VID_TIMER_ReadCapture\000"
 1341      54494D45 
 1341      525F5265 
 1341      61644361 
 1341      70747572 
 1342              	.LASF19:
 1343 01aa 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1343      52784275 
 1343      66666572 
 1343      00
 1344              	.LASF24:
 1345 01b7 6163635F 		.ascii	"acc_err\000"
 1345      65727200 
 1346              	.LASF13:
 1347 01bf 646F7562 		.ascii	"double\000"
 1347      6C6500
 1348              	.LASF39:
 1349 01c6 50574D5F 		.ascii	"PWM_WriteCompare\000"
 1349      57726974 
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 29


 1349      65436F6D 
 1349      70617265 
 1349      00
 1350              	.LASF25:
 1351 01d7 73747262 		.ascii	"strbuf\000"
 1351      756600
 1352              	.LASF2:
 1353 01de 73686F72 		.ascii	"short int\000"
 1353      7420696E 
 1353      7400
 1354              	.LASF54:
 1355 01e8 433A5C55 		.ascii	"C:\\Users\\danie\\Documents\\ECE302_NavCode\\ECE302"
 1355      73657273 
 1355      5C64616E 
 1355      69655C44 
 1355      6F63756D 
 1356 0216 5F4E6176 		.ascii	"_NavProject\\Design01.cydsn\000"
 1356      50726F6A 
 1356      6563745C 
 1356      44657369 
 1356      676E3031 
 1357              	.LASF11:
 1358 0231 75696E74 		.ascii	"uint16\000"
 1358      313600
 1359              	.LASF51:
 1360 0238 48455F49 		.ascii	"HE_ISR_SetVector\000"
 1360      53525F53 
 1360      65745665 
 1360      63746F72 
 1360      00
 1361              	.LASF56:
 1362 0249 6D61696E 		.ascii	"main\000"
 1362      00
 1363              	.LASF8:
 1364 024e 756E7369 		.ascii	"unsigned int\000"
 1364      676E6564 
 1364      20696E74 
 1364      00
 1365              	.LASF18:
 1366 025b 73706565 		.ascii	"speed_inter\000"
 1366      645F696E 
 1366      74657200 
 1367              	.LASF7:
 1368 0267 6C6F6E67 		.ascii	"long long unsigned int\000"
 1368      206C6F6E 
 1368      6720756E 
 1368      7369676E 
 1368      65642069 
 1369              	.LASF30:
 1370 027e 73746565 		.ascii	"steeringOutput\000"
 1370      72696E67 
 1370      4F757470 
 1370      757400
 1371              	.LASF36:
 1372 028d 73707269 		.ascii	"sprintf\000"
 1372      6E746600 
 1373              	.LASF22:
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 30


 1374 0295 656C6170 		.ascii	"elapsed\000"
 1374      73656400 
 1375              	.LASF20:
 1376 029d 73706565 		.ascii	"speed\000"
 1376      6400
 1377              	.LASF16:
 1378 02a3 73697A65 		.ascii	"sizetype\000"
 1378      74797065 
 1378      00
 1379              	.LASF21:
 1380 02ac 6572726F 		.ascii	"error\000"
 1380      7200
 1381              	.LASF6:
 1382 02b2 6C6F6E67 		.ascii	"long long int\000"
 1382      206C6F6E 
 1382      6720696E 
 1382      7400
 1383              	.LASF26:
 1384 02c0 4B705F73 		.ascii	"Kp_steering\000"
 1384      74656572 
 1384      696E6700 
 1385              	.LASF53:
 1386 02cc 6D61696E 		.ascii	"main.c\000"
 1386      2E6300
 1387              	.LASF14:
 1388 02d3 63686172 		.ascii	"char\000"
 1388      00
 1389              	.LASF44:
 1390 02d8 5649445F 		.ascii	"VID_TIMER_Start\000"
 1390      54494D45 
 1390      525F5374 
 1390      61727400 
 1391              	.LASF55:
 1392 02e8 64656C74 		.ascii	"delta_error\000"
 1392      615F6572 
 1392      726F7200 
 1393              	.LASF32:
 1394 02f4 73616D70 		.ascii	"sampledTime\000"
 1394      6C656454 
 1394      696D6500 
 1395              	.LASF49:
 1396 0300 494E545F 		.ascii	"INT_SAMPLE_SetVector\000"
 1396      53414D50 
 1396      4C455F53 
 1396      65745665 
 1396      63746F72 
 1397              	.LASF41:
 1398 0315 50574D5F 		.ascii	"PWM_Start\000"
 1398      53746172 
 1398      7400
 1399              	.LASF45:
 1400 031f 53455256 		.ascii	"SERVO_PWM_Start\000"
 1400      4F5F5057 
 1400      4D5F5374 
 1400      61727400 
 1401              	.LASF4:
 1402 032f 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\danie\AppData\Local\Temp\ccLnSvYf.s 			page 31


 1402      20696E74 
 1402      00
 1403              	.LASF29:
 1404 0338 70726576 		.ascii	"prev_steering\000"
 1404      5F737465 
 1404      6572696E 
 1404      6700
 1405              	.LASF42:
 1406 0346 54494D45 		.ascii	"TIMER_Start\000"
 1406      525F5374 
 1406      61727400 
 1407              	.LASF15:
 1408 0352 6C6F6E67 		.ascii	"long double\000"
 1408      20646F75 
 1408      626C6500 
 1409              	.LASF37:
 1410 035e 55415254 		.ascii	"UART_PutString\000"
 1410      5F507574 
 1410      53747269 
 1410      6E6700
 1411              	.LASF46:
 1412 036d 56444143 		.ascii	"VDAC_Start\000"
 1412      5F537461 
 1412      727400
 1413              	.LASF47:
 1414 0378 434F4D50 		.ascii	"COMP_Start\000"
 1414      5F537461 
 1414      727400
 1415              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
